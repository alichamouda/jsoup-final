/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 23:35:07 GMT 2022
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn(">!", ">!").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0, (Iterator) null).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0, (Attributes) null).when(element0).attributes();
      doReturn(0).when(element0).childNodeSize();
      doReturn("2/tOpf><NFA`X5+Dl", "Wm").when(element0).tagName();
      doReturn((Node) null).when(element0).nextSibling();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn(">!", ">!").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      Document document1 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(document1).location();
      doReturn((Element) null).when(document1).child(anyInt());
      org.w3c.dom.Document document2 = w3CDom0.fromJsoup(document1);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document2);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.tail(node0, 156);
      org.w3c.dom.Document document3 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder1 = new W3CDom.W3CBuilder(document3);
      Node node1 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder1.head(node1, 1089);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = w3CDom0.asString((org.w3c.dom.Document) null);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", string0);
  }
}
